{
	"info": {
		"_postman_id": "9512e399-3ea9-42da-af86-988065f2b8e8",
		"name": "udacity-fsnd-udaspicelatte",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18349883"
	},
	"item": [
		{
			"name": "public",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401 since no credentials are present\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"description": "\\-In this project, Postman was used for testing, and users are saved in collections, this is a simple app that demonstrates the use of Auth0 service with implementation in a python environment.\n\n\\-Authentification and authorization condition is necessary to access the data or make any changes in the app data, Auth0 service account is necessary to generate a token \"JWT\". (JSON web token)\n\nThe security used in every endpoint for every user is JWT and stored in the front-end. you can copy paste the token into postman for test and choose bearer token as security check."
		},
		{
			"name": "barista",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403 since credentials are valid, but permission is not present\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkdKNWh4VzhuZ2tjQm12cm5tU3BreCJ9.eyJpc3MiOiJodHRwczovL2Rldi15YXNhMnl5ZS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjMyYTE5NDJhZjk2OWQ2ZGNmYjYzMGJhIiwiYXVkIjoiZGFkbyIsImlhdCI6MTY2Mzc4MTM5MSwiZXhwIjoxNjYzNzg4NTkxLCJhenAiOiJBQ0pETlVQNjRZNEM2VXhEcXRZTXp6QUQ0SHRRdWJuTCIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZ2V0OmRyaW5rcyIsImdldDpkcmlua3MtZGV0YWlsIl19.oVcTp0R3HPwYToQUL53wYEeltMZLtVF2DnAM4krapw1ONPaFzNZHd1CP2deR_jc1X5dN9TZTnZqvWlSNM2mZ0oFOlAWHJmeEgfGh4-YE-feoVgWuofbrBO9L1EQ4MD4kndyUsJjjyTEeEBI51cYLfs2qKR025UAIi6rRD2hQcVl43Yb_GuvsxEhsxBv-pB1FSrPXEIcMKsRVJxyfmBwkydDA2tZ48WawPtigNneVzM676CjFDcSNt0OVnEFhzV5waUMtc4dNFf1S31DiQPbWB4HY9vv1iceObcrwhfAOF1IdvcWqLeUuTS7BMH41xfn-gPi7khqRMmfP3BYdl1nLkQ",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "manager",
			"item": [
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkdKNWh4VzhuZ2tjQm12cm5tU3BreCJ9.eyJpc3MiOiJodHRwczovL2Rldi15YXNhMnl5ZS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjMyNWQ4ZTJlMTVlYmE5NDNiNWI5OWM2IiwiYXVkIjoiZGFkbyIsImlhdCI6MTY2Mzc4MDgwOCwiZXhwIjoxNjYzNzg4MDA4LCJhenAiOiJBQ0pETlVQNjRZNEM2VXhEcXRZTXp6QUQ0SHRRdWJuTCIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmRyaW5rcyIsImdldDpkcmlua3MiLCJnZXQ6ZHJpbmtzLWRldGFpbCIsInBhdGNoOmRyaW5rcyIsInBvc3Q6ZHJpbmtzIl19.Xgv5oQ1mJ3m6-pXNpwzevGLx6VIVed3YupnNQWqGGfBw7w5yTl-eaaKqlHTLuSsrgtD4KwkUa_jnPVeL4BC4nbkW0G5-JM1JWv91lPWVSaGB6B6e6FAO8sce6m3X5DsAPU697-OlakzC7yQFUAMNASsg8MKHD97VZFqTX28zujBPOmtRWmpXNLBstAdptX54Zu2uL9oGffkhpzQK8cdVARaw1s2FY-e0lMiKKhcwiv93AwSblVOlfoAtmGCvhL2o_cbsOCVuc0bQAZJJnevnPHFE3vQyClYY-U5C9UpUhlUTj1AiVETfk52J1LuibgvfIkQBPxHtnKZRAn-Wz7yKQg",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks-detail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks-detail",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks-detail"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkdKNWh4VzhuZ2tjQm12cm5tU3BreCJ9.eyJpc3MiOiJodHRwczovL2Rldi15YXNhMnl5ZS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjMyNWQ4ZTJlMTVlYmE5NDNiNWI5OWM2IiwiYXVkIjoiZGFkbyIsImlhdCI6MTY2Mzc4MDgwOCwiZXhwIjoxNjYzNzg4MDA4LCJhenAiOiJBQ0pETlVQNjRZNEM2VXhEcXRZTXp6QUQ0SHRRdWJuTCIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmRyaW5rcyIsImdldDpkcmlua3MiLCJnZXQ6ZHJpbmtzLWRldGFpbCIsInBhdGNoOmRyaW5rcyIsInBvc3Q6ZHJpbmtzIl19.Xgv5oQ1mJ3m6-pXNpwzevGLx6VIVed3YupnNQWqGGfBw7w5yTl-eaaKqlHTLuSsrgtD4KwkUa_jnPVeL4BC4nbkW0G5-JM1JWv91lPWVSaGB6B6e6FAO8sce6m3X5DsAPU697-OlakzC7yQFUAMNASsg8MKHD97VZFqTX28zujBPOmtRWmpXNLBstAdptX54Zu2uL9oGffkhpzQK8cdVARaw1s2FY-e0lMiKKhcwiv93AwSblVOlfoAtmGCvhL2o_cbsOCVuc0bQAZJJnevnPHFE3vQyClYY-U5C9UpUhlUTj1AiVETfk52J1LuibgvfIkQBPxHtnKZRAn-Wz7yKQg",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Water10\",\n    \"recipe\": {\n        \"name\": \"Water\",\n        \"color\": \"blue\",\n        \"parts\": 1\n    }\n}"
						},
						"url": {
							"raw": "{{host}}/drinks",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"value contains drinks array\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.drinks).to.be.an('array')",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Water5\"\n}"
						},
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "/drinks/1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/drinks/1",
							"host": [
								"{{host}}"
							],
							"path": [
								"drinks",
								"1"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkdKNWh4VzhuZ2tjQm12cm5tU3BreCJ9.eyJpc3MiOiJodHRwczovL2Rldi15YXNhMnl5ZS51cy5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NjMyNWQ4ZTJlMTVlYmE5NDNiNWI5OWM2IiwiYXVkIjoiZGFkbyIsImlhdCI6MTY2Mzc4MDgwOCwiZXhwIjoxNjYzNzg4MDA4LCJhenAiOiJBQ0pETlVQNjRZNEM2VXhEcXRZTXp6QUQ0SHRRdWJuTCIsInNjb3BlIjoiIiwicGVybWlzc2lvbnMiOlsiZGVsZXRlOmRyaW5rcyIsImdldDpkcmlua3MiLCJnZXQ6ZHJpbmtzLWRldGFpbCIsInBhdGNoOmRyaW5rcyIsInBvc3Q6ZHJpbmtzIl19.Xgv5oQ1mJ3m6-pXNpwzevGLx6VIVed3YupnNQWqGGfBw7w5yTl-eaaKqlHTLuSsrgtD4KwkUa_jnPVeL4BC4nbkW0G5-JM1JWv91lPWVSaGB6B6e6FAO8sce6m3X5DsAPU697-OlakzC7yQFUAMNASsg8MKHD97VZFqTX28zujBPOmtRWmpXNLBstAdptX54Zu2uL9oGffkhpzQK8cdVARaw1s2FY-e0lMiKKhcwiv93AwSblVOlfoAtmGCvhL2o_cbsOCVuc0bQAZJJnevnPHFE3vQyClYY-U5C9UpUhlUTj1AiVETfk52J1LuibgvfIkQBPxHtnKZRAn-Wz7yKQg",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "localhost:5000",
			"type": "string"
		}
	]
}